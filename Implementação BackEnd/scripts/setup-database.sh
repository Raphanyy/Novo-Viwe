#!/bin/bash

# ========================================
# SCRIPT DE SETUP DO BANCO DE DADOS
# ========================================
# Execute ap√≥s conectar ao Neon: [Connect to Neon](#open-mcp-popover)

set -e  # Parar em caso de erro

echo "üöÄ Iniciando setup do banco de dados..."

# Verificar se DATABASE_URL est√° definida
if [ -z "$DATABASE_URL" ]; then
    echo "‚ùå ERROR: DATABASE_URL n√£o est√° definida"
    echo "   Configure no arquivo .env primeiro"
    exit 1
fi

echo "‚úÖ DATABASE_URL encontrada"

# Testar conex√£o
echo "üîç Testando conex√£o com o banco..."
if psql "$DATABASE_URL" -c "SELECT version();" > /dev/null 2>&1; then
    echo "‚úÖ Conex√£o com banco estabelecida"
else
    echo "‚ùå ERRO: N√£o foi poss√≠vel conectar ao banco"
    echo "   Verifique suas credenciais no .env"
    exit 1
fi

# Verificar se arquivo de schema existe
if [ ! -f "DATABASE_SCHEMA.sql" ]; then
    echo "‚ùå ERRO: Arquivo DATABASE_SCHEMA.sql n√£o encontrado"
    echo "   Certifique-se de estar na pasta 'Implementa√ß√£o BackEnd'"
    exit 1
fi

echo "‚úÖ Arquivo de schema encontrado"

# Fazer backup se existirem tabelas
echo "üîç Verificando se existem tabelas..."
TABLE_COUNT=$(psql "$DATABASE_URL" -t -c "SELECT COUNT(*) FROM information_schema.tables WHERE table_schema = 'public';" 2>/dev/null || echo "0")

if [ "$TABLE_COUNT" -gt 0 ]; then
    echo "‚ö†Ô∏è  Encontradas $TABLE_COUNT tabela(s) existente(s)"
    read -p "   Deseja continuar? Isso pode sobrescrever dados. (y/N): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        echo "‚ùå Setup cancelado pelo usu√°rio"
        exit 1
    fi
    
    echo "üíæ Criando backup das tabelas existentes..."
    BACKUP_FILE="backup_$(date +%Y%m%d_%H%M%S).sql"
    pg_dump "$DATABASE_URL" > "$BACKUP_FILE"
    echo "‚úÖ Backup salvo em: $BACKUP_FILE"
fi

# Executar schema
echo "üî® Executando schema do banco..."
if psql "$DATABASE_URL" -f DATABASE_SCHEMA.sql; then
    echo "‚úÖ Schema executado com sucesso"
else
    echo "‚ùå ERRO: Falha ao executar schema"
    exit 1
fi

# Verificar tabelas criadas
echo "üîç Verificando tabelas criadas..."
CREATED_TABLES=$(psql "$DATABASE_URL" -t -c "SELECT COUNT(*) FROM information_schema.tables WHERE table_schema = 'public';" 2>/dev/null || echo "0")

if [ "$CREATED_TABLES" -ge 20 ]; then
    echo "‚úÖ $CREATED_TABLES tabelas criadas com sucesso"
else
    echo "‚ö†Ô∏è  Apenas $CREATED_TABLES tabelas encontradas (esperado: 20+)"
fi

# Verificar √≠ndices
echo "üîç Verificando √≠ndices..."
INDEX_COUNT=$(psql "$DATABASE_URL" -t -c "SELECT COUNT(*) FROM pg_indexes WHERE schemaname = 'public';" 2>/dev/null || echo "0")
echo "‚úÖ $INDEX_COUNT √≠ndices criados"

# Verificar triggers
echo "üîç Verificando triggers..."
TRIGGER_COUNT=$(psql "$DATABASE_URL" -t -c "SELECT COUNT(*) FROM information_schema.triggers;" 2>/dev/null || echo "0")
echo "‚úÖ $TRIGGER_COUNT triggers criados"

# Verificar dados iniciais
echo "üîç Verificando dados iniciais..."
PLANS_COUNT=$(psql "$DATABASE_URL" -t -c "SELECT COUNT(*) FROM plans;" 2>/dev/null || echo "0")
if [ "$PLANS_COUNT" -ge 3 ]; then
    echo "‚úÖ $PLANS_COUNT planos iniciais carregados"
else
    echo "‚ö†Ô∏è  Apenas $PLANS_COUNT planos encontrados (esperado: 3)"
fi

CONFIG_COUNT=$(psql "$DATABASE_URL" -t -c "SELECT COUNT(*) FROM system_config;" 2>/dev/null || echo "0")
if [ "$CONFIG_COUNT" -ge 5 ]; then
    echo "‚úÖ $CONFIG_COUNT configura√ß√µes iniciais carregadas"
else
    echo "‚ö†Ô∏è  Apenas $CONFIG_COUNT configura√ß√µes encontradas (esperado: 5+)"
fi

# Resumo final
echo ""
echo "üéâ SETUP CONCLU√çDO COM SUCESSO!"
echo ""
echo "üìä RESUMO:"
echo "   - Tabelas: $CREATED_TABLES"
echo "   - √çndices: $INDEX_COUNT"
echo "   - Triggers: $TRIGGER_COUNT"
echo "   - Planos: $PLANS_COUNT"
echo "   - Configura√ß√µes: $CONFIG_COUNT"
echo ""
echo "üöÄ PR√ìXIMOS PASSOS:"
echo "   1. Configure suas environment variables (.env)"
echo "   2. Execute: node scripts/verify-setup.js"
echo "   3. Inicie o desenvolvimento do servidor"
echo ""
echo "üìö DOCUMENTA√á√ÉO:"
echo "   - Ver: STEP_BY_STEP.md"
echo "   - Ver: DATABASE_ANALYSIS.md"
echo ""
